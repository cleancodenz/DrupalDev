<?php 
/**
 * @file
 *  Install, update and uninstall functions for the ccpuriri module.
 */

/**
 * Implementation of hook_install().
 */
function ccpuriri_install() {
  
  _ccpuriri_add_custom_menu();
      
  // add address field
  _ccpuriri_add_addressfield() ;
  
  // add contact field
  _ccpuriri_add_contactfield() ;
}


/**
 * Implementation of hook_uninstall().
 */
function ccpuriri_uninstall() {
  
  _ccpuriri_remove_custom_menu();
  
  _ccpuriri_remove_addressfield();
    
  _ccpuriri_remove_contactfield();
}

/*
 * Module setup functions
 * */
/*
 * Add addressfield to user
 * */
function  _ccpuriri_add_addressfield()
{
  // create addressfield
  // to clear the cache to include the field type defined in this module
  
  _field_info_collate_types(true);
  
  $fieldname = 'field_ccpuriri_addressfield';
  $field = field_read_field($fieldname, array('include_inactive' => TRUE));
  
  if (empty($field)) {
  
    $field = array(
        'field_name' => $fieldname,
        'type' => 'ccpuriri_addressfield',
        'entity_types' => array('user'),
    );
  
    field_create_field($field);
  
    // Create the instance if needed.
    // add the field to user, with some widget settings
    if (!field_read_instance('user', $fieldname , 'user', array('include_inactive' => TRUE))) {
  
      field_attach_create_bundle('user', 'user');
  
      $settings= array(
          'showname'=> true,
          'showorganization' => false,
          ); 
      
      $instance = array(
          'field_name' => $fieldname,
          'label' => 'Address',
          'entity_type' => 'user',
          'widget' => array('settings'=> $settings),
          'bundle' => 'user',
      );
      field_create_instance($instance);
    }
  
  }
  
}

/*
 * Add contact field to user
* */
function  _ccpuriri_add_contactfield()
{
  // create contactfield
  // to clear the cache to include the field type defined in this module

  _field_info_collate_types(true);

  $fieldname = 'field_ccpuriri_contactfield';
  $field = field_read_field($fieldname, array('include_inactive' => TRUE));

  if (empty($field)) {

    $field = array(
        'field_name' => $fieldname,
        'type' => 'ccpuriri_contactfield',
        'entity_types' => array('user'),
        'cardinality' => FIELD_CARDINALITY_UNLIMITED,
       
    );

    field_create_field($field);

    // Create the instance if needed.
    // add the field to user, with some widget settings
    if (!field_read_instance('user', $fieldname , 'user', array('include_inactive' => TRUE))) {

      field_attach_create_bundle('user', 'user');

      $settings= array();

      $instance = array(
          'field_name' => $fieldname,
          'label' => 'Contacts',
          'entity_type' => 'user',
          'widget' => array('settings'=> $settings),
          'bundle' => 'user',
      );
      field_create_instance($instance);
    }

  }

}


/*
 * Add menu blocks 
 * */
function _ccpuriri_add_custom_menu(){

  // 1. create a custom menu for header-right, login/register etc
  $secondarymenu = array(
      'menu_name' => 'secondary_top',
      'title' => 'Top Secondary',
      'description' => 'Top level secondary menu',
  );
  
  menu_save($secondarymenu);
  
  //2. create ccpuririusernavigation
  //This is group for account related menu items, only displayed when url is user/1
  //It will be switched on by main navigation block CCPuriri Navigation   
  
  
  $ccpuririusernavigationmenu = array(
      'menu_name' => 'ccpuririusernavigation',
      'title' => 'CCPuriri User Navigation',
      'description' => 'User navigation menu',
  );
  
  menu_save($ccpuririusernavigationmenu);
  
  
  // Create a menu link for user/% in usernavigation menu.
  /*
   $menu_item = array(
       'menu_name' => 'secondary_top',
       'weight' => 10,
       'link_title' => 'My Account',
       'link_path' => 'user/%',
       'expanded' => true,
   );
  
  menu_link_save($menu_item);
  */
  // add ccpuriri navigation block to side bar first
  /*
  db_update('block')
  ->fields(array(
      'status' => 1,
      'weight' => -15,
      'region' => 'sidebar_first',
  ))
  ->condition('module', 'ccpuriri')
  ->condition('delta','navigation')
  ->condition('theme', 'bootstrapcc')
  ->execute();
  */
  
  
}

/*
 * Module teardown functions
* */

/*
 * Remove the address field
 * */
function  _ccpuriri_remove_addressfield(){
  
  //delete the field
  field_delete_field('field_ccpuriri_addressfield');
  
  //Purge field data now to allow module to be reinstalled
  //if this is the only field remaining.
  field_purge_batch(10);
  
}

/*
 * Remove the contact field
* */
function  _ccpuriri_remove_contactfield(){

  //delete the field
  field_delete_field('field_ccpuriri_contactfield');

  //Purge field data now to allow module to be reinstalled
  //if this is the only field remaining.
  field_purge_batch(10);

}
/*
 * Remove the menu blocks
* */
function  _ccpuriri_remove_custom_menu(){

  // 1. delete custom menu
  $secondarymenu = array(
      'menu_name' => 'secondary_top',
  );
  
  menu_delete($secondarymenu);
  
  // 2. delete custom menu
  $ccpuririusernavigation = array(
      'menu_name' => 'ccpuririusernavigation',
  );
  
  menu_delete($ccpuririusernavigation);
  
}
