<?php 
/**
 * @file
 *  Install, update and uninstall functions for the ccpuriri module.
 */

/**
 * Implementation of hook_install().
 */
function ccpuriri_install() {
  
  // 1. create a custom menu 
  $secondarymenu = array(
      'menu_name' => 'secondary_top',
      'title' => 'Top Secondary',
      'description' => 'Top level secondary menu',
    );
  
  menu_save($secondarymenu);
  
  //2. create ccpuririusernavigation
  
  $ccpuririusernavigationmenu = array(
      'menu_name' => 'ccpuririusernavigation',
      'title' => 'CCPuriri User Navigation',
      'description' => 'User navigation menu',
  );
  
  menu_save($ccpuririusernavigationmenu);
  
 
  // Create a menu link for user/% in usernavigation menu. 
/*
  $menu_item = array(
      'menu_name' => 'secondary_top',
      'weight' => 10,
      'link_title' => 'My Account',
      'link_path' => 'user/%',
      'expanded' => true,
  );

  menu_link_save($menu_item);
  */
  
  // add address field
  _ccpuriri_add_addressfield() ;
}


/**
 * Implementation of hook_uninstall().
 */
function ccpuriri_uninstall() {
  // 1. delete custom menu
  $secondarymenu = array(
      'menu_name' => 'secondary_top',
  );
  
  menu_delete($secondarymenu);
  
  // 2. delete custom menu
  $ccpuririusernavigation = array(
      'menu_name' => 'ccpuririusernavigation',
  );
  
  menu_delete($ccpuririusernavigation);
  
  //delete the field
  field_delete_field('field_ccpuriri_addressfield');
  
  //Purge field data now to allow module to be reinstalled
  //if this is the only field remaining.
  field_purge_batch(10);
  
}

function  _ccpuriri_add_addressfield()
{
  // create addressfield
  // to clear the cache to include the field type defined in this module
  
  _field_info_collate_types(true);
  
  $fieldname = 'field_ccpuriri_addressfield';
  $field = field_read_field($fieldname, array('include_inactive' => TRUE));
  
  if (empty($field)) {
  
    $field = array(
        'field_name' => $fieldname,
        'type' => 'ccpuriri_addressfield',
        'entity_types' => array('user'),
    );
  
    field_create_field($field);
  
    // Create the instance if needed.
    if (!field_read_instance('user', $fieldname , 'user', array('include_inactive' => TRUE))) {
  
      field_attach_create_bundle('user', 'user');
  
      $instance = array(
          'field_name' => $fieldname,
          'label' => 'Address',
          'entity_type' => 'user',
          'bundle' => 'user',
      );
      field_create_instance($instance);
    }
  
  }
  
}